#include "PolynomialWarpedShadow.h"

#include "shadow.h"

PolynomialWarpedShadow::PolynomialWarpedShadow()
{
	_Init( glm::mat4(1.0), glm::mat4(1.0) );
}

PolynomialWarpedShadow::PolynomialWarpedShadow( glm::mat4 _coeffsX, glm::mat4 _coeffsY )
{
	_Init( _coeffsX, _coeffsY );
}


PolynomialWarpedShadow::~PolynomialWarpedShadow(void)
{
}

void PolynomialWarpedShadow::_Init( glm::mat4 _coeffsX, glm::mat4 _coeffsY )
{
	m_sName = "Polynomial";
	m_sDefines = "#define POLYNOMIAL_WARP\n";

	m_matCoeffsX = _coeffsX; 
	m_matCoeffsY = _coeffsY;

	m_pScreenGrid->SetResolution(4);
}

bool PolynomialWarpedShadow::Initialize(TLight* _light)
{
	return true;
}

void PolynomialWarpedShadow::PreRender()
{
	int res = (int)this->GetResolution();
	float* z_values = new float[res*res*2];
	
	memset(z_values, 0, res*res*2*sizeof(float));

	glBindTexture(GL_TEXTURE_2D, m_iTexID);
	glGetTexImage(GL_TEXTURE_2D, 0, GL_RG, GL_FLOAT, z_values);
	glBindTexture(GL_TEXTURE_2D, 0 ); 

	m_matCoeffsX = this->compute2DPolynomialCoeffsX( z_values );
	m_matCoeffsY = this->compute2DPolynomialCoeffsY( z_values );

	delete[] z_values;

	this->GenerateGrid();
}

void PolynomialWarpedShadow::PostRender()
{
}

glm::vec2 PolynomialWarpedShadow::ComputeDiff( glm::vec2 _P )
{
	glm::vec2 diff( 0.0 );

	if( !m_bEnabled ) return diff;

	glm::vec4 temp, X, Y;
	
	X = glm::vec4( 1.0, _P.x, glm::pow(_P.x, 2.0f), glm::pow(_P.x,3.0f) );
	Y = glm::vec4( 1.0, _P.y, glm::pow(_P.y, 2.0f), glm::pow(_P.y,3.0f) );

	//FIXME: nemusi ty matice byt transponovane?? V octavu jsem je musel transponovat.
	temp = X * m_matCoeffsX;
	diff.x = glm::dot(temp, Y);
	temp = X * m_matCoeffsY;
	diff.y = glm::dot(temp, Y);

	return diff * POLY_BIAS;
}

///////////////////////////////////////////////////////////////////////////////

void PolynomialWarpedShadow::SetMatrices( glm::mat4 _coeffsX, glm::mat4 _coeffsY )
{
	m_matCoeffsX = _coeffsX;
	m_matCoeffsY = _coeffsY;
}

void PolynomialWarpedShadow::SetMatCoeffsX( glm::mat4 _coeffsX )
{
	m_matCoeffsX = _coeffsX;
}

void PolynomialWarpedShadow::SetMatCoeffsY( glm::mat4 _coeffsY )
{
	m_matCoeffsY = _coeffsY;
}

glm::mat4 PolynomialWarpedShadow::GetMatCoeffsX()
{
	return m_matCoeffsX;
}

glm::mat4 PolynomialWarpedShadow::GetMatCoeffsY()
{
	return m_matCoeffsY;
}

///////////////////////////////////////////////////////////////////////////////
//-- Analytical computing of matrices of polynomial coefficients

#define I(y,x) 2*(4*y + x)
glm::mat4 PolynomialWarpedShadow::compute2DPolynomialCoeffsX( float *z )
{
	glm::mat4 m( 0.0 );

m[0][0] = z[I(0,0)];
m[0][1] = -11.0/6.0*z[I(0,0)]+3.0*z[I(0,1)]-3.0/2.0*z[I(0,2)]+1.0/3.0*z[I(0,3)] ;
m[0][2] = z[I(0,0)]-5.0/2.0*z[I(0,1)]+2.0*z[I(0,2)]-1.0/2.0*z[I(0,3)] ;
m[0][3] = -1.0/6.0*z[I(0,0)]+1.0/2.0*z[I(0,1)]-1.0/2.0*z[I(0,2)]+1.0/6.0*z[I(0,3)];

m[1][0] = -11.0/6.0*z[I(0,0)]+3.0*z[I(1,0)]-3.0/2.0*z[I(2,0)]+1.0/3.0*z[I(3,0)] ;
m[1][1] = -11.0/18.0*z[I(0,3)]+121.0/36.0*z[I(0,0)]-11.0/2.0*z[I(0,1)]+11.0/4.0*z[I(0,2)]-11.0/2.0*z[I(1,0)]+z[I(1,3)]+11.0/4.0*z[I(2,0)]-9.0/2.0*z[I(2,1)]+9.0/4.0*z[I(2,2)]-1.0/2.0*z[I(2,3)]-11.0/18.0*z[I(3,0)]+1.0/9.0*z[I(3,3)]+9.0*z[I(1,1)]-1.0/2.0*z[I(3,2)]+z[I(3,1)]-9.0/2.0*z[I(1,2)]; 
m[1][2] = 11.0/12.0*z[I(0,3)]-11.0/6.0*z[I(0,0)]+55.0/12.0*z[I(0,1)]-11.0/3.0*z[I(0,2)]+3.0*z[I(1,0)]-3.0/2.0*z[I(1,3)]-3.0/2.0*z[I(2,0)]+15.0/4.0*z[I(2,1)]-3.0*z[I(2,2)]+3.0/4.0*z[I(2,3)]+1.0/3.0*z[I(3,0)]-1.0/6.0*z[I(3,3)]-15.0/2.0*z[I(1,1)]+2.0/3.0*z[I(3,2)]-5.0/6.0*z[I(3,1)]+6.0*z[I(1,2)];
m[1][3] = -11.0/36.0*z[I(0,3)]+11.0/36.0*z[I(0,0)]-11.0/12.0*z[I(0,1)]+11.0/12.0*z[I(0,2)]-1.0/2.0*z[I(1,0)]+1.0/2.0*z[I(1,3)]+1.0/4.0*z[I(2,0)]-3.0/4.0*z[I(2,1)]+3.0/4.0*z[I(2,2)]-1.0/4.0*z[I(2,3)]-1.0/18.0*z[I(3,0)]+1.0/18.0*z[I(3,3)]+3.0/2.0*z[I(1,1)]-1.0/6.0*z[I(3,2)]+1.0/6.0*z[I(3,1)]-3.0/2.0*z[I(1,2)];

m[2][0] = -5.0/2.0*z[I(1,0)]+2.0*z[I(2,0)]+z[I(0,0)]-1.0/2.0*z[I(3,0)];
m[2][1] = 1.0/3.0*z[I(0,3)]-11.0/6.0*z[I(0,0)]+3.0*z[I(0,1)]-3.0/2.0*z[I(0,2)]+55.0/12.0*z[I(1,0)]-5.0/6.0*z[I(1,3)]-11.0/3.0*z[I(2,0)]+6.0*z[I(2,1)]-3.0*z[I(2,2)]+2.0/3.0*z[I(2,3)]+11.0/12.0*z[I(3,0)]-1.0/6.0*z[I(3,3)]-15.0/2.0*z[I(1,1)]+3.0/4.0*z[I(3,2)]-3.0/2.0*z[I(3,1)]+15.0/4.0*z[I(1,2)];
m[2][2] = -1.0/2.0*z[I(0,3)]+z[I(0,0)]-5.0/2.0*z[I(0,1)]+2.0*z[I(0,2)]-5.0/2.0*z[I(1,0)]+5.0/4.0*z[I(1,3)]+2.0*z[I(2,0)]-5.0*z[I(2,1)]+4.0*z[I(2,2)]-z[I(2,3)]-1.0/2.0*z[I(3,0)]+1.0/4.0*z[I(3,3)]+25.0/4.0*z[I(1,1)]-z[I(3,2)]+5.0/4.0*z[I(3,1)]-5.0*z[I(1,2)];
m[2][3] = 1.0/6.0*z[I(0,3)]-1.0/6.0*z[I(0,0)]+1.0/2.0*z[I(0,1)]-1.0/2.0*z[I(0,2)]+5.0/12.0*z[I(1,0)]-5.0/12.0*z[I(1,3)]-1.0/3.0*z[I(2,0)]+z[I(2,1)]-z[I(2,2)]+1.0/3.0*z[I(2,3)]+1.0/12.0*z[I(3,0)]-1.0/12.0*z[I(3,3)]-5.0/4.0*z[I(1,1)]+1.0/4.0*z[I(3,2)]-1.0/4.0*z[I(3,1)]+5.0/4.0*z[I(1,2)];

m[3][0] = 1.0/2.0*z[I(1,0)]-1.0/2.0*z[I(2,0)]-1.0/6.0*z[I(0,0)]+1.0/6.0*z[I(3,0)];
m[3][1] = -1.0/18.0*z[I(0,3)]+11.0/36.0*z[I(0,0)]-1.0/2.0*z[I(0,1)]+1.0/4.0*z[I(0,2)]-11.0/12.0*z[I(1,0)]+1.0/6.0*z[I(1,3)]+11.0/12.0*z[I(2,0)]-3.0/2.0*z[I(2,1)]+3.0/4.0*z[I(2,2)]-1.0/6.0*z[I(2,3)]-11.0/36.0*z[I(3,0)]+1.0/18.0*z[I(3,3)]+3.0/2.0*z[I(1,1)]-1.0/4.0*z[I(3,2)]+1.0/2.0*z[I(3,1)]-3.0/4.0*z[I(1,2)];
m[3][2] = 1.0/12.0*z[I(0,3)]-1.0/6.0*z[I(0,0)]+5.0/12.0*z[I(0,1)]-1.0/3.0*z[I(0,2)]+1.0/2.0*z[I(1,0)]-1.0/4.0*z[I(1,3)]-1.0/2.0*z[I(2,0)]+5.0/4.0*z[I(2,1)]-z[I(2,2)]+1.0/4.0*z[I(2,3)]+1.0/6.0*z[I(3,0)]-1.0/12.0*z[I(3,3)]-5.0/4.0*z[I(1,1)]+1.0/3.0*z[I(3,2)]-5.0/12.0*z[I(3,1)]+z[I(1,2)];
m[3][3] = -1.0/36.0*z[I(0,3)]+1.0/36.0*z[I(0,0)]-1.0/12.0*z[I(0,1)]+1.0/12.0*z[I(0,2)]-1.0/12.0*z[I(1,0)]+1.0/12.0*z[I(1,3)]+1.0/12.0*z[I(2,0)]-1.0/4.0*z[I(2,1)]+1.0/4.0*z[I(2,2)]-1.0/12.0*z[I(2,3)]-1.0/36.0*z[I(3,0)]+1.0/36.0*z[I(3,3)]+1.0/4.0*z[I(1,1)]-1.0/12.0*z[I(3,2)]+1.0/12.0*z[I(3,1)]-1.0/4.0*z[I(1,2)];

	return m;
}

#define J(y,x) 2*(4*y + x) + 1
glm::mat4 PolynomialWarpedShadow::compute2DPolynomialCoeffsY( float *z )
{
	glm::mat4 m( 0.0 );

m[0][0] = z[J(0,0)];
m[0][1] = -11.0/6.0*z[J(0,0)]+3.0*z[J(0,1)]-3.0/2.0*z[J(0,2)]+1.0/3.0*z[J(0,3)] ;
m[0][2] = z[J(0,0)]-5.0/2.0*z[J(0,1)]+2.0*z[J(0,2)]-1.0/2.0*z[J(0,3)] ;
m[0][3] = -1.0/6.0*z[J(0,0)]+1.0/2.0*z[J(0,1)]-1.0/2.0*z[J(0,2)]+1.0/6.0*z[J(0,3)];

m[1][0] = -11.0/6.0*z[J(0,0)]+3.0*z[J(1,0)]-3.0/2.0*z[J(2,0)]+1.0/3.0*z[J(3,0)] ;
m[1][1] = -11.0/18.0*z[J(0,3)]+121.0/36.0*z[J(0,0)]-11.0/2.0*z[J(0,1)]+11.0/4.0*z[J(0,2)]-11.0/2.0*z[J(1,0)]+z[J(1,3)]+11.0/4.0*z[J(2,0)]-9.0/2.0*z[J(2,1)]+9.0/4.0*z[J(2,2)]-1.0/2.0*z[J(2,3)]-11.0/18.0*z[J(3,0)]+1.0/9.0*z[J(3,3)]+9.0*z[J(1,1)]-1.0/2.0*z[J(3,2)]+z[J(3,1)]-9.0/2.0*z[J(1,2)]; 
m[1][2] = 11.0/12.0*z[J(0,3)]-11.0/6.0*z[J(0,0)]+55.0/12.0*z[J(0,1)]-11.0/3.0*z[J(0,2)]+3.0*z[J(1,0)]-3.0/2.0*z[J(1,3)]-3.0/2.0*z[J(2,0)]+15.0/4.0*z[J(2,1)]-3.0*z[J(2,2)]+3.0/4.0*z[J(2,3)]+1.0/3.0*z[J(3,0)]-1.0/6.0*z[J(3,3)]-15.0/2.0*z[J(1,1)]+2.0/3.0*z[J(3,2)]-5.0/6.0*z[J(3,1)]+6.0*z[J(1,2)];
m[1][3] = -11.0/36.0*z[J(0,3)]+11.0/36.0*z[J(0,0)]-11.0/12.0*z[J(0,1)]+11.0/12.0*z[J(0,2)]-1.0/2.0*z[J(1,0)]+1.0/2.0*z[J(1,3)]+1.0/4.0*z[J(2,0)]-3.0/4.0*z[J(2,1)]+3.0/4.0*z[J(2,2)]-1.0/4.0*z[J(2,3)]-1.0/18.0*z[J(3,0)]+1.0/18.0*z[J(3,3)]+3.0/2.0*z[J(1,1)]-1.0/6.0*z[J(3,2)]+1.0/6.0*z[J(3,1)]-3.0/2.0*z[J(1,2)];

m[2][0] = -5.0/2.0*z[J(1,0)]+2.0*z[J(2,0)]+z[J(0,0)]-1.0/2.0*z[J(3,0)];
m[2][1] = 1.0/3.0*z[J(0,3)]-11.0/6.0*z[J(0,0)]+3.0*z[J(0,1)]-3.0/2.0*z[J(0,2)]+55.0/12.0*z[J(1,0)]-5.0/6.0*z[J(1,3)]-11.0/3.0*z[J(2,0)]+6.0*z[J(2,1)]-3.0*z[J(2,2)]+2.0/3.0*z[J(2,3)]+11.0/12.0*z[J(3,0)]-1.0/6.0*z[J(3,3)]-15.0/2.0*z[J(1,1)]+3.0/4.0*z[J(3,2)]-3.0/2.0*z[J(3,1)]+15.0/4.0*z[J(1,2)];
m[2][2] = -1.0/2.0*z[J(0,3)]+z[J(0,0)]-5.0/2.0*z[J(0,1)]+2.0*z[J(0,2)]-5.0/2.0*z[J(1,0)]+5.0/4.0*z[J(1,3)]+2.0*z[J(2,0)]-5.0*z[J(2,1)]+4.0*z[J(2,2)]-z[J(2,3)]-1.0/2.0*z[J(3,0)]+1.0/4.0*z[J(3,3)]+25.0/4.0*z[J(1,1)]-z[J(3,2)]+5.0/4.0*z[J(3,1)]-5.0*z[J(1,2)];
m[2][3] = 1.0/6.0*z[J(0,3)]-1.0/6.0*z[J(0,0)]+1.0/2.0*z[J(0,1)]-1.0/2.0*z[J(0,2)]+5.0/12.0*z[J(1,0)]-5.0/12.0*z[J(1,3)]-1.0/3.0*z[J(2,0)]+z[J(2,1)]-z[J(2,2)]+1.0/3.0*z[J(2,3)]+1.0/12.0*z[J(3,0)]-1.0/12.0*z[J(3,3)]-5.0/4.0*z[J(1,1)]+1.0/4.0*z[J(3,2)]-1.0/4.0*z[J(3,1)]+5.0/4.0*z[J(1,2)];

m[3][0] = 1.0/2.0*z[J(1,0)]-1.0/2.0*z[J(2,0)]-1.0/6.0*z[J(0,0)]+1.0/6.0*z[J(3,0)];
m[3][1] = -1.0/18.0*z[J(0,3)]+11.0/36.0*z[J(0,0)]-1.0/2.0*z[J(0,1)]+1.0/4.0*z[J(0,2)]-11.0/12.0*z[J(1,0)]+1.0/6.0*z[J(1,3)]+11.0/12.0*z[J(2,0)]-3.0/2.0*z[J(2,1)]+3.0/4.0*z[J(2,2)]-1.0/6.0*z[J(2,3)]-11.0/36.0*z[J(3,0)]+1.0/18.0*z[J(3,3)]+3.0/2.0*z[J(1,1)]-1.0/4.0*z[J(3,2)]+1.0/2.0*z[J(3,1)]-3.0/4.0*z[J(1,2)];
m[3][2] = 1.0/12.0*z[J(0,3)]-1.0/6.0*z[J(0,0)]+5.0/12.0*z[J(0,1)]-1.0/3.0*z[J(0,2)]+1.0/2.0*z[J(1,0)]-1.0/4.0*z[J(1,3)]-1.0/2.0*z[J(2,0)]+5.0/4.0*z[J(2,1)]-z[J(2,2)]+1.0/4.0*z[J(2,3)]+1.0/6.0*z[J(3,0)]-1.0/12.0*z[J(3,3)]-5.0/4.0*z[J(1,1)]+1.0/3.0*z[J(3,2)]-5.0/12.0*z[J(3,1)]+z[J(1,2)];
m[3][3] = -1.0/36.0*z[J(0,3)]+1.0/36.0*z[J(0,0)]-1.0/12.0*z[J(0,1)]+1.0/12.0*z[J(0,2)]-1.0/12.0*z[J(1,0)]+1.0/12.0*z[J(1,3)]+1.0/12.0*z[J(2,0)]-1.0/4.0*z[J(2,1)]+1.0/4.0*z[J(2,2)]-1.0/12.0*z[J(2,3)]-1.0/36.0*z[J(3,0)]+1.0/36.0*z[J(3,3)]+1.0/4.0*z[J(1,1)]-1.0/12.0*z[J(3,2)]+1.0/12.0*z[J(3,1)]-1.0/4.0*z[J(1,2)];

	return m;
}

///////////////////////////////////////////////////////////////////////////////
